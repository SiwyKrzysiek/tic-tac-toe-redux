{"version":3,"sources":["actions/index.js","components/counter.js","components/field.js","components/board.js","components/player.js","components/playersStatus.js","App.js","serviceWorker.js","reducers/counterReducer.js","reducers/boardReducer.js","reducers/playerReducer.js","reducers/index.js","index.js"],"names":["changePlayer","type","increment","value","connect","state","counter","dispatch","onIncrement","onDecrement","onDelayedIncrement","delay","getState","setTimeout","incrementAfterDelay","props","onClick","Fileld","className","board","activePlayer","onFieldClikc","i","index","playerMarker","setFieldToValue","map","v","key","Player","style","width","playerName","isActive","role","aria-valuenow","aria-valuemin","aria-valuemax","PlayersStatus","App","Boolean","window","location","hostname","match","counterReducer","action","initalState","Array","fill","boardReducer","playerReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.89cb3f94.chunk.js","sourcesContent":["\n// Action types\nexport const INCREMENT = \"INCREMENT\";\nexport const DECREMENT = \"DECREMENT\";\n// export const INCREMENT_AFTER_DELAY = \"INCREMENT_AFTER_DELAY\";\n\nexport const SET_FIELD = \"SET_FIELD\";\n\nexport const CHANGE_PLAYER = \"CHANGE_PLAYER\";\n\n// Action creators\n\nconst setFieldToValue = (index, value) => {\n  return {\n    type: SET_FIELD,\n    index: index,\n    value: value\n  };\n};\n\nexport const setField = (index) => {\n  return (dispatch, getState) => {\n    const state = getState();\n    if (state.board[index] !== \"\") // Field is taken\n      return;\n\n    const playerMarker = state.activePlayer === 0 ? \"O\" : \"X\";\n\n    dispatch(setFieldToValue(index, playerMarker));\n    dispatch(changePlayer());\n  };\n};\n\nexport const changePlayer = () => {\n  return {\n    type: CHANGE_PLAYER\n  };\n};\n\nexport const increment = (value) => {\n  return {\n    type: \"INCREMENT\",\n    value: value\n  };\n};\n\nexport const decrement = (value) => {\n  return {\n    type: \"DECREMENT\",\n    value: value\n  };\n};\n\nexport const incrementAfterDelay = (value, delay = 200) => {\n  return (dispatch, getState) => { // thunk will inject them\n    setTimeout(() => {\n      dispatch(increment(value));\n\n    }, delay);\n\n  };\n};","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { increment, decrement, incrementAfterDelay } from \"../actions\";\n\nfunction Counter(props) {\n\n  return (\n    <>\n      <h4>{props.counter}</h4>\n      <button onClick={props.onIncrement}>Increment</button>\n      <button onClick={props.onDecrement}>Decrenent</button>\n      <button onClick={props.onDelayedIncrement}>+10 after while</button>\n    </>\n  );\n}\n\nCounter.propTypes = {\n  counter: PropTypes.number,\n  onIncrement: PropTypes.func,\n  onDecrement: PropTypes.func,\n  onDelayedIncrement: PropTypes.func\n};\n\nconst mapStateToProps = (state) => (\n  {\n    counter: state.counter\n  }\n);\n\nconst mapDispatchToProps = (dispatch) => (\n  {\n    onIncrement: () => dispatch(increment(1)),\n    onDecrement: () => dispatch(decrement(5)),\n    onDelayedIncrement: () => dispatch(incrementAfterDelay(10, 1000))\n  }\n);\n\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Counter);","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"../styles/gameField.css\";\n\nfunction Fileld(props) {\n  return (\n    <div className=\"game-field\" onClick={props.onClick}>{props.value}</div>\n  );\n}\n\nFileld.propTypes = {\n  value: PropTypes.string,\n  onClick: PropTypes.func\n};\n\nexport default Fileld;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { setField } from \"../actions\";\nimport PropTypes from \"prop-types\";\nimport Field from \"./field\";\nimport \"../styles/board.css\";\n\nfunction Board(props) {\n  // const playerMarker = (player) => (player === 0 ? \"O\" : \"X\");\n\n  return (\n    <div className=\"game-board\">\n      {props.board.map((v, i) => (\n        <Field key={i} value={v}\n          onClick={() => props.onFieldClikc(i)}></Field>\n      ))}\n    </div>\n  );\n}\n\nBoard.propTypes = {\n  board: PropTypes.arrayOf(String),\n  activePlayer: PropTypes.number,\n  onFieldClikc: PropTypes.func\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    board: state.board,\n    activePlayer: state.activePlayer\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onFieldClikc: (i) => dispatch(setField(i)) // TODO: Change to active player\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Board);","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Player(props) {\n\n  return (\n    <div className=\"d-inline-flex flex-column align-items-center px-2\" style={{ width: \"200px\" }}>\n      <h3>{props.playerName}</h3>\n      {props.isActive &&\n        <div className=\"progress\" style={{ width: \"100%\" }}>\n          <div className=\"progress-bar progress-bar-striped progress-bar-animated\"\n            role=\"progressbar\" aria-valuenow=\"75\"\n            aria-valuemin=\"0\" aria-valuemax=\"100\"\n            style={{ width: \"75%\" }}>\n          </div>\n        </div>\n      }\n\n    </div >\n  );\n}\n\nPlayer.propTypes = {\n  playerName: PropTypes.string.isRequired,\n  isActive: PropTypes.bool.isRequired\n};\n\nexport default Player;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Player from \"./player\";\n\nfunction PlayersStatus(props) {\n  return (\n    <div className=\"d-flex justify-content-center my-3\">\n      <Player className=\"mr-auto\" playerName=\"Player 1\" isActive={true} />\n      <Player playerName=\"Player 2\" isActive={false} />\n    </div>\n  );\n}\n\nexport default PlayersStatus;","import React from \"react\";\nimport Counter from \"./components/counter\";\nimport Board from \"./components/board\";\nimport PlayerStatus from \"./components/playersStatus\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.css\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Try your best, be weary of time!</h1>\n      <Counter></Counter>\n      <PlayerStatus />\n      <Board />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === \"[::1]\" ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won\"t work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let\"s check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n            \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It\"s the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can\"t reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { INCREMENT, DECREMENT } from \"../actions\";\n\nconst counterReducer = (state = 0, action) => {\n  switch (action.type) {\n    case INCREMENT:\n      return state + action.value;\n    case DECREMENT:\n      return state - action.value;\n    default:\n      return state;\n  }\n};\n\nexport default counterReducer;","import { SET_FIELD } from \"../actions\";\n\nconst initalState = Array(9).fill(\"\");\n\nconst boardReducer = (state = initalState, action) => {\n  const { type, index, value } = action;\n\n  if (type !== SET_FIELD)\n    return state;\n\n  return state.map((v, i) => (i === index ? value : v));\n};\n\nexport default boardReducer;","import { CHANGE_PLAYER } from \"../actions\";\n\nconst initalState = 0;\n\nconst playerReducer = (state = initalState, action) => {\n  switch (action.type) {\n    case CHANGE_PLAYER:\n      return state === 0 ? 1 : 0;\n    default:\n      return state;\n  }\n};\n\nexport default playerReducer;","import { combineReducers } from \"redux\";\nimport counterReducer from \"./counterReducer\";\nimport boardReducer from \"./boardReducer\";\nimport playerReducer from \"./playerReducer\";\n\nexport default combineReducers({\n  counter: counterReducer,\n  board: boardReducer,\n  activePlayer: playerReducer\n});","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer, composeEnhancers(\n  applyMiddleware(thunk)\n));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  , document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}